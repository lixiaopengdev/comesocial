

#import <JavaScriptCore/JavaScriptCore.h>

NS_ASSUME_NONNULL_BEGIN

typedef NSInteger(^YZJSCallNative)(NSString *instanceId, NSArray *tasks, NSString *callback);
typedef NSInteger(^YZJSCallUpdateStyle)(NSString *instanceId,NSString *ref,NSDictionary *stylesData);
typedef NSInteger(^YZJSCallAddEvent)(NSString *instanceId,NSString *ref,NSString *event);
typedef NSInteger(^YZJSCallRemoveEvent)(NSString *instanceId,NSString *ref,NSString *event);
typedef NSInteger(^YZJSCallCreateFinish)(NSString *instanceId);
typedef NSInteger(^YZJSCallRefreshFinish)(NSString *instanceId);
typedef NSInteger(^YZJSCallUpdateFinish)(NSString *instanceId);
typedef NSInvocation *_Nullable(^YZJSCallNativeModule)(NSString *instanceId, NSString *moduleName, NSString *methodName, NSArray *args, NSDictionary *options);
typedef id _Nullable (^YZJSCallNativeBlock)(NSString *instanceId, NSString *eventName, NSDictionary *options);

_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wstrict-prototypes\"") \
typedef id _Nullable (^YZRegisterNativeMethodBlock)();
_Pragma("clang diagnostic pop")


@protocol YZJSEngineProtocol <NSObject>

@property (nonatomic, readonly) JSValue* exception;

/**
 * Executes the js framework code in javascript engine
 * You can do some setup in this method
 */
- (void)executeJSFramework:(NSString *)frameworkScript;

/**
 * Executes the js code in javascript engine
 * You can do some setup in this method
 */
- (void)executeJavascript:(NSString *)script;

/**
 * Executes the path js code in javascript engine
 */
- (void)excutJsfiles:(NSString *)filePath;

/**
 * Executes global js method with specific arguments
 */
- (JSValue *)callJSMethod:(NSString *)method args:(NSArray* _Nullable)args;



/**
 * Register callback when call native tasks occur
 */
- (void)registerCallNative:(YZJSCallNative)callNative;

/**
 * Register callback when call native method
 */
- (void)registerHandler:(NSString *)eventName  withBlock:(YZRegisterNativeMethodBlock)block;


/**
 * Register callback when addEvent tasks occur
 */
- (void)registerCallAddEvent:(YZJSCallAddEvent)callAddEvent;

/**
 * Register callback when removeEvent tasks occur
 */
- (void)registerCallRemoveEvent:(YZJSCallRemoveEvent)callRemoveEvent;

/**
 * Register callback for global js function `callNativeModule`
 */
- (void)registerCallNativeModule:(YZJSCallNativeModule)callNativeModuleBlock;


@optional

/**
 * Register callback when refreshFinish tasks occur
 */
- (void)registerCallRefreshFinish:(YZJSCallRefreshFinish)callRefreshFinish;

/**
 * Register callback when updateFinish tasks occur
 */
- (void)registerCallUpdateFinish:(YZJSCallUpdateFinish)callUpdateFinish;

/*
 * Executes the specified JavaScript code, treating the specified URL as its source location.
 * Evaluating a script runs any top-level code and adds function or object definitions to the brige’s global object.
 * The sourceURL parameter is informative only; debuggers may use this URL when reporting exceptions.
 @param script   The JavaScript source code to evaluate.
 @param sourceURL A URL to be considered as the script’s origin.
 @return ReturnsThe last value generated by the script. Note that a script can result in the JavaScript value undefined.
 */
- (JSValue *)executeJavascript:(NSString *)script withSourceURL:(NSURL* _Nullable)sourceURL;

/*
 * javaScript runtime context
 */
- (JSContext*)javaScriptContext;

/*
 * jsValue data
 */
- (JSValue *)getJsValueWithName:(NSString * _Nullable)name;
@end

NS_ASSUME_NONNULL_END
